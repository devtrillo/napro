/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { Row } from '@rocicorp/zero';
import { createBuilder } from '@rocicorp/zero';
import type { DrizzleToZeroSchema, ZeroCustomType } from 'drizzle-zero';
import type * as drizzleSchema from '../server/db/schema';

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
	tables: {
		account: {
			name: 'account',
			columns: {
				accessToken: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'accessToken'>,
					serverName: 'access_token',
				},
				accessTokenExpiresAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'account',
						'accessTokenExpiresAt'
					>,
					serverName: 'access_token_expires_at',
				},
				accountId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'accountId'>,
					serverName: 'account_id',
				},
				createdAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'createdAt'>,
					serverName: 'created_at',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'id'>,
				},
				idToken: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'idToken'>,
					serverName: 'id_token',
				},
				password: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'password'>,
				},
				providerId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'providerId'>,
					serverName: 'provider_id',
				},
				refreshToken: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'refreshToken'>,
					serverName: 'refresh_token',
				},
				refreshTokenExpiresAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'account',
						'refreshTokenExpiresAt'
					>,
					serverName: 'refresh_token_expires_at',
				},
				scope: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'scope'>,
				},
				updatedAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'updatedAt'>,
					serverName: 'updated_at',
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'account', 'userId'>,
					serverName: 'user_id',
				},
			},
			primaryKey: ['id'],
		},
		cycleInsights: {
			name: 'cycleInsights',
			columns: {
				created_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycleInsights', 'created_at'>,
				},
				deleted_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycleInsights', 'deleted_at'>,
				},
				updated_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycleInsights', 'updated_at'>,
				},
				algoritmVersion: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'algoritmVersion'
					>,
					serverName: 'algorithm_version',
				},
				confidenceLevel: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'confidenceLevel'
					>,
					serverName: 'confidence_level',
				},
				cycleId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycleInsights', 'cycleId'>,
					serverName: 'cycle_id',
				},
				cycleRegularityScore: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'cycleRegularityScore'
					>,
					serverName: 'cycle_regularity_score',
				},
				fertileWindowEnd: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'fertileWindowEnd'
					>,
					serverName: 'fertile_window_end',
				},
				fertileWindowStart: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'fertileWindowStart'
					>,
					serverName: 'fertile_window_start',
				},
				id: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycleInsights', 'id'>,
				},
				mucusPatternQuality: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'mucusPatternQuality'
					>,
					serverName: 'mucus_pattern_quality',
				},
				peakMucusDay: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'peakMucusDay'
					>,
					serverName: 'peak_mucus_day',
				},
				postPeakInfertileStart: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'postPeakInfertileStart'
					>,
					serverName: 'post_peak_infertile_start',
				},
				predictedFertileWindowEnd: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'predictedFertileWindowEnd'
					>,
					serverName: 'predicted_fertile_window_end',
				},
				predictedFertileWindowStart: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'predictedFertileWindowStart'
					>,
					serverName: 'predicted_fertile_window_start',
				},
				predictedNextCycleStart: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycleInsights',
						'predictedNextCycleStart'
					>,
					serverName: 'predicted_next_cycle_start',
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycleInsights', 'userId'>,
					serverName: 'user_id',
				},
			},
			primaryKey: ['id'],
			serverName: 'cycle_insights',
		},
		cycles: {
			name: 'cycles',
			columns: {
				created_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'created_at'>,
				},
				deleted_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'deleted_at'>,
				},
				updated_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'updated_at'>,
				},
				cycleLength: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'cycleLength'>,
					serverName: 'cycle_length',
				},
				endDate: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'endDate'>,
					serverName: 'end_date',
				},
				id: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'id'>,
				},
				isComplete: {
					type: 'boolean',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'isComplete'>,
					serverName: 'is_complete',
				},
				notes: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'notes'>,
				},
				number: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'number'>,
					serverName: 'cycle_number',
				},
				peakDay: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'peakDay'>,
					serverName: 'peak_day',
				},
				postPeakPhaseLength: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'cycles',
						'postPeakPhaseLength'
					>,
					serverName: 'post_peak_phase_length',
				},
				startDate: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'startDate'>,
					serverName: 'start_date',
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'cycles', 'userId'>,
					serverName: 'user_id',
				},
			},
			primaryKey: ['id'],
		},
		dailyObservations: {
			name: 'dailyObservations',
			columns: {
				bleedingColor: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'bleedingColor'
					>,
				},
				bleedingFlow: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'bleedingFlow'
					>,
				},
				countOfThree: {
					type: 'boolean',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'countOfThree'
					>,
					serverName: 'count_of_three',
				},
				cycleDay: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'cycleDay'
					>,
					serverName: 'cycle_day',
				},
				cycleId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'dailyObservations', 'cycleId'>,
					serverName: 'cycle_id',
				},
				id: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'dailyObservations', 'id'>,
				},
				intercourse: {
					type: 'boolean',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'intercourse'
					>,
				},
				mucusColor: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'mucusColor'
					>,
					serverName: 'mucus_color',
				},
				mucusConsistency: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'mucusConsistency'
					>,
					serverName: 'mucus_consistency',
				},
				mucusSensation: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'mucusSensation'
					>,
					serverName: 'mucus_sensation',
				},
				notes: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'dailyObservations', 'notes'>,
				},
				observationDate: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'observationDate'
					>,
					serverName: 'observation_date',
				},
				peakDay: {
					type: 'boolean',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'dailyObservations', 'peakDay'>,
					serverName: 'peak_day',
				},
				primaryCode: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'primaryCode'
					>,
					serverName: 'primary_code',
				},
				secondaryCodes: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'secondaryCodes'
					>,
					serverName: 'secondary_codes',
				},
				specialCircumstances: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'specialCircumstances'
					>,
					serverName: 'special_circumstances',
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'dailyObservations', 'userId'>,
					serverName: 'user_id',
				},
				created_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'created_at'
					>,
				},
				deleted_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'deleted_at'
					>,
				},
				updated_at: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'dailyObservations',
						'updated_at'
					>,
				},
			},
			primaryKey: ['id'],
			serverName: 'daily_observations',
		},
		fertilityPreferences: {
			name: 'fertilityPreferences',
			columns: {
				avgCycleLength: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'fertilityPreferences',
						'avgCycleLength'
					>,
					serverName: 'avg_cycle_length',
				},
				dailyReminder: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'fertilityPreferences',
						'dailyReminder'
					>,
					serverName: 'daily_reminder',
				},
				trackingMethod: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'fertilityPreferences',
						'trackingMethod'
					>,
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'fertilityPreferences',
						'userId'
					>,
					serverName: 'user_id',
				},
			},
			primaryKey: ['userId'],
			serverName: 'fertility_preferences',
		},
		invitation: {
			name: 'invitation',
			columns: {
				email: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'email'>,
				},
				expiresAt: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'expiresAt'>,
					serverName: 'expires_at',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'id'>,
				},
				inviterId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'inviterId'>,
					serverName: 'inviter_id',
				},
				organizationId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'organizationId'>,
					serverName: 'organization_id',
				},
				role: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'role'>,
				},
				status: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'invitation', 'status'>,
				},
			},
			primaryKey: ['id'],
		},
		member: {
			name: 'member',
			columns: {
				createdAt: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'member', 'createdAt'>,
					serverName: 'created_at',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'member', 'id'>,
				},
				organizationId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'member', 'organizationId'>,
					serverName: 'organization_id',
				},
				role: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'member', 'role'>,
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'member', 'userId'>,
					serverName: 'user_id',
				},
			},
			primaryKey: ['id'],
		},
		organization: {
			name: 'organization',
			columns: {
				createdAt: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'organization', 'createdAt'>,
					serverName: 'created_at',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'organization', 'id'>,
				},
				logo: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'organization', 'logo'>,
				},
				metadata: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'organization', 'metadata'>,
				},
				name: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'organization', 'name'>,
				},
				slug: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'organization', 'slug'>,
				},
			},
			primaryKey: ['id'],
		},
		session: {
			name: 'session',
			columns: {
				activeOrganizationId: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<
						ZeroSchema,
						'session',
						'activeOrganizationId'
					>,
					serverName: 'active_organization_id',
				},
				createdAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'createdAt'>,
					serverName: 'created_at',
				},
				expiresAt: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'expiresAt'>,
					serverName: 'expires_at',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'id'>,
				},
				ipAddress: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'ipAddress'>,
					serverName: 'ip_address',
				},
				token: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'token'>,
				},
				updatedAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'updatedAt'>,
					serverName: 'updated_at',
				},
				userAgent: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'userAgent'>,
					serverName: 'user_agent',
				},
				userId: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'session', 'userId'>,
					serverName: 'user_id',
				},
			},
			primaryKey: ['id'],
		},
		todo: {
			name: 'todo',
			columns: {
				completed: {
					type: 'boolean',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'todo', 'completed'>,
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'todo', 'id'>,
				},
				title: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'todo', 'title'>,
				},
			},
			primaryKey: ['id'],
		},
		user: {
			name: 'user',
			columns: {
				createdAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'createdAt'>,
					serverName: 'created_at',
				},
				email: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'email'>,
				},
				emailVerified: {
					type: 'boolean',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'emailVerified'>,
					serverName: 'email_verified',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'id'>,
				},
				image: {
					type: 'string',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'image'>,
				},
				name: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'name'>,
				},
				updatedAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'user', 'updatedAt'>,
					serverName: 'updated_at',
				},
			},
			primaryKey: ['id'],
		},
		verification: {
			name: 'verification',
			columns: {
				createdAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'verification', 'createdAt'>,
					serverName: 'created_at',
				},
				expiresAt: {
					type: 'number',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'verification', 'expiresAt'>,
					serverName: 'expires_at',
				},
				id: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'verification', 'id'>,
				},
				identifier: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'verification', 'identifier'>,
				},
				updatedAt: {
					type: 'number',
					optional: true,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'verification', 'updatedAt'>,
					serverName: 'updated_at',
				},
				value: {
					type: 'string',
					optional: false,
					customType: null as unknown as ZeroCustomType<ZeroSchema, 'verification', 'value'>,
				},
			},
			primaryKey: ['id'],
		},
	},
	relationships: {},
	enableLegacyQueries: true,
	enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "account" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Account = Row<Schema['tables']['account']>;
/**
 * Represents a row from the "cycleInsights" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type CycleInsight = Row<Schema['tables']['cycleInsights']>;
/**
 * Represents a row from the "cycles" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Cycle = Row<Schema['tables']['cycles']>;
/**
 * Represents a row from the "dailyObservations" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type DailyObservation = Row<Schema['tables']['dailyObservations']>;
/**
 * Represents a row from the "fertilityPreferences" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type FertilityPreference = Row<Schema['tables']['fertilityPreferences']>;
/**
 * Represents a row from the "invitation" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Invitation = Row<Schema['tables']['invitation']>;
/**
 * Represents a row from the "member" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Member = Row<Schema['tables']['member']>;
/**
 * Represents a row from the "organization" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Organization = Row<Schema['tables']['organization']>;
/**
 * Represents a row from the "session" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Session = Row<Schema['tables']['session']>;
/**
 * Represents a row from the "todo" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Todo = Row<Schema['tables']['todo']>;
/**
 * Represents a row from the "user" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema['tables']['user']>;
/**
 * Represents a row from the "verification" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Verification = Row<Schema['tables']['verification']>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
